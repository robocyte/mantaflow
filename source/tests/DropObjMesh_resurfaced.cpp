#include <iostream>
#include <sstream>
#include <fstream>
#include <iomanip>

#include "manta.h"
#include "grid.h"
#include "levelset.h"
#include "particle.h"
#include "mesh.h"
#include "flip.h"

int main()
{
    std::cout << "\nNote - this scene reads in particle data generated by DropObjMesh."
              << "\nIt does not perform any fluid simulation, only generates a nicer surface.\n";

    // resolution for level set / output mesh
    int resolution = 300;
    auto main_solver = Manta::FluidSolver(Manta::Vec3i(resolution), 3);
    
    // kernel radius for surface creation
    Real radiusFactor = 2.5f;
    
    //  === scene setup ===

    // prepare grids and particles
    auto flags      = Manta::FlagGrid(&main_solver);
    auto phi        = Manta::LevelsetGrid(&main_solver);
    auto pp         = Manta::BasicParticleSystem(&main_solver);
    auto mesh       = Manta::Mesh(&main_solver);

    // acceleration data for particle nbs
    auto pindex     = Manta::ParticleIndexSystem(&main_solver);
    auto gpi        = Manta::Grid<int>(&main_solver);

    flags.initDomain();

    // for debugging:
    Manta::setDebugLevel(10); // full output

    // main loop
    int t = 0;
    while (t < 999)
    {
        std::stringstream particle_filename;
        particle_filename << "simulation data\\DropObjMesh\\flipParts_" << std::setw(4) << std::setfill('0') << t << ".uni";

        // check for existing input file - a bit hackish but works for now
        std::ifstream particle_file(particle_filename.str());
        if (particle_file.fail())
        {
            std::cout << "input particle file not found, exiting\n";
            std::exit(0);
        }

        // read input sim particles
        pp.load(particle_filename.str());

        // create surface
        Manta::gridParticleIndex(pp, pindex, flags, gpi);
        Manta::averagedParticleLevelset(pp, pindex, flags, gpi, phi, radiusFactor, 1, 1);

        phi.setBound(0.0f, 1);
        phi.createMesh(mesh);

        std::stringstream mesh_filename;
        mesh_filename << "simulation data\\DropObjMesh_generated\\fluidsurface_final_" << std::setw(4) << std::setfill('0') << t << ".bobj.gz";
        mesh.save(mesh_filename.str());
        
        t++;
    }
}
